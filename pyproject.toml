[project]
name = "virtual-ai-org"
version = "0.5.0"
description = "A production-ready framework for building and operating virtual organizations staffed by AI agents"
readme = "README.md"
requires-python = ">=3.10"
license = {text = "MIT"}

dependencies = [
    "fastapi>=0.111.0",
    "uvicorn>=0.30.5",
    "pydantic>=2.8.2",
    "python-dotenv>=1.0.1",
    "httpx>=0.27.0",
    "pyyaml>=6.0.2",
    "sqlalchemy>=2.0.34",
    "psycopg>=3.2.1",
    "alembic>=1.13.2",
    "passlib[bcrypt]>=1.7.4",
    "bcrypt>=4.0.0,<5.0.0",
    "pyjwt>=2.9.0",
    "boto3>=1.35.28",
    "sse-starlette>=2.1.0",
    "redis>=5.0.7",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "pytest-asyncio>=0.23.0",
    "ruff>=0.4.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.uv]
dev-dependencies = [
    "pytest>=8.0.0",
    "pytest-asyncio>=0.23.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
    "httpx>=0.27.0",
    "ruff>=0.4.0",
    "pre-commit>=3.5.0",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "-v --tb=short --strict-markers"

[tool.coverage.run]
source = ["src"]
omit = ["*/tests/*", "*/alembic/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]

[tool.ruff]
line-length = 100
target-version = "py310"

[tool.ruff.lint]
select = ["E", "F", "I", "N", "W"]
ignore = ["E501"]
